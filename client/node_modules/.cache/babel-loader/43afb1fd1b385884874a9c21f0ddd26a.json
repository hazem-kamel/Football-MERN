{"ast":null,"code":"var _jsxFileName = \"/Users/hazem/Desktop/Web-Development/football/Frontend/src/components/PredictComments/Predict.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addCommentAction } from \"../../Redux/actions/Actions\";\nimport \"./Predict.css\";\n\nconst Predict = props => {\n  const session = sessionStorage.getItem(\"storedSession\");\n  const history = useHistory();\n  useEffect(() => {\n    if (!session) {\n      history.push(\"/login\");\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"comments-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"add-comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"comment\")), React.createElement(\"div\", {\n    className: \"prev-comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"asdasd\"))));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Predict);","map":{"version":3,"sources":["/Users/hazem/Desktop/Web-Development/football/Frontend/src/components/PredictComments/Predict.js"],"names":["React","useEffect","connect","useHistory","addCommentAction","Predict","props","session","sessionStorage","getItem","history","push","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAO,eAAP;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAAhB;AACA,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,OAAL,EAAc;AACZG,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CALF,CADF;AAaD,CAtBD;;AAwBA,MAAMC,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe,EAAf,CAA3B;;AACA,eAAeb,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addCommentAction } from \"../../Redux/actions/Actions\";\nimport \"./Predict.css\";\nconst Predict = (props) => {\n  const session = sessionStorage.getItem(\"storedSession\");\n  const history = useHistory();\n  useEffect(() => {\n    if (!session) {\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <div className=\"comments-section\">\n      <div className=\"add-comment\">\n        <input></input>\n        <button>comment</button>\n      </div>\n      <div className=\"prev-comments\">\n        <div className=\"comment\">\n          <p>asdasd</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = (dispatch) => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(Predict);\n"]},"metadata":{},"sourceType":"module"}